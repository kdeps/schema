/// Abstractions for PKL records
@ModuleInfo { minPklVersion = "0.28.2" }

@go.Package { name = "github.com/kdeps/schema/gen/pkl_resource" }

open module org.kdeps.pkl.PklResource

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.10.0#/go.pkl"
import "package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.uri@1.0.3#/URI.pkl"

/// Retrieves a session record by its [id]
///
/// Returns the textual content of the session entry, or an empty string if not found.
///
/// [id]: The identifier of the session record.
function getPklRecord(id: String?, typ: String?): String = 
  if (id != null && typ != null) 
    read("pklres:/\(id)?type=\(typ)")?.text ?? "" 
  else ""

/// Sets or updates a session record with a new [value]
///
/// Returns the set value as confirmation.
///
/// [id]: The identifier of the session record.
/// [value]: The value to store.
function setPklValue(id: String?, typ: String?, key: String?, value: String?): String = 
  if (id != null && typ != null && key != null && value != null) 
    read("pklres:/\(id)?type=\(typ)?key=\(key)?op=set&value=\(URI.encodeComponent(value))")?.text ?? "" 
  else ""

/// Get a pkl key record
///
/// Returns the key value
///
/// [id]: The identifier of the session record.
/// [value]: The value to store.
function getPklValue(id: String?, typ: String?, key: String?): String = 
  if (id != null && typ != null && key != null) 
    read("pklres:/\(id)?type=\(typ)?key=\(key)?op=get")?.text ?? "" 
  else ""

/// Lists all record IDs of a specific type
///
/// Returns a JSON array of record IDs for the given type
///
/// [typ]: The type of records to list (e.g., "llm", "exec", "python", "http")
function getAllRecords(typ: String?): String = 
  if (typ != null) 
    read("pklres:/?type=\(typ)&op=list")?.text ?? "[]"
  else "[]"

/// Gets resource by fetching and evaluating the full PKL record
///
/// Returns the evaluated PKL record for the given resource ID and type
///
/// [id]: The resource ID to get the record for
/// [typ]: The resource type (e.g., "llm", "exec", "python", "http", "data")
function getResourceOutput(id: String?, typ: String?): Any = 
  if (id != null && typ != null) 
    read("pklres:/\(id)?type=\(typ)&op=eval")
  else null

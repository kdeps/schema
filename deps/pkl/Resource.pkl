@go.Package { name = "github.com/kdeps/schema/gen/resource" }

module org.kdeps.pkl.Resource

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"

import "Project.pkl"
import "API.pkl"
import "LLM.pkl"
import "ENV.pkl"

hidden idStringRegex = Regex(#"(^\w+$)"#)
hidden isValidId = (str) ->
  if (str.matches(idStringRegex))
    true
  else
    throw("Error: Invalid name: The name contains invalid characters. Please ensure it only includes alphanumeric characters (letters and numbers) and is not empty.")

id: String(isValidId) = "helloWorld"
name: String?
description: String?
category: String(isValidId)?
requires: Listing<String(isValidId)>?
run: Listing<ResourceAction>?

class ResourceAction {
  hidden actionPrefixRegex = Regex(#"^(?i:(!?(ENV|FILE|DIR|CMD|URL|EXEC):))(.+)$"#)

  hidden isValidPrefix = (str) ->
    if (str.matches(actionPrefixRegex))
      true
    else
      throw("Error: Invalid configuration string: The input string does not match any of the expected formats: ENV:, FILE:, DIR:, URL:, EXEC:. Please ensure that the string starts with one of these prefixes, optionally preceded by an exclamation mark to indicate negation (e.g. !ENV:, !FILE:, etc.).")

  name: String?
  exec: String?
  settings: Project.Settings?
  skip: Listing<String(isValidPrefix)>?
  preflight: Listing<String(isValidPrefix)>?
  env: Listing<ENV.ResourceEnv>?
  chat: Listing<LLM.ResourceChat>?
  httpClient: Listing<API.ResourceHTTPClient>?
}

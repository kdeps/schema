/// Abstractions for Kdeps API Server Deferred Responses
@ModuleInfo { minPklVersion = "0.27.0" }

@go.Package { name = "github.com/kdeps/schema/gen/api_server_deferred_response" }

open module org.kdeps.pkl.APIServerDeferredResponse

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"

/// A mapping of resource IDs to their associated [APIServerDeferred] objects.
resources: Mapping<UInt32, APIServerDeferred>

/// Class representing a block of deferred API server responses containing data.
class APIServerDeferredResponseBlock {
        /// The data associated with the deferred response.
        data: Listing<Any>
}

/// Class representing an error block in deferred API server responses.
class APIServerDeferredErrorsBlock {
        /// The error code associated with the response.
        code: Int
        /// The error message describing the issue.
        message: String
}

/// Class representing the state of a deferred API server response.
class APIServerDeferred {
        /// Indicates if the request was successful. Defaults to `false`.
        success: Boolean = false
        /// Indicates if the response has been resolved. Defaults to `false`.
        resolved: Boolean = false
        /// The response block containing data if the request was successful.
        response: APIServerDeferredResponseBlock?
        /// The error block if the request encountered issues.
        errors: APIServerDeferredErrorsBlock?
}

/// Retrieves the [APIServerDeferred] associated with the given resource [id].
///
/// If the resource is not found or if the mapping is empty, returns a new [APIServerDeferred] with default values.
///
/// [id]: The ID of the resource to retrieve.
/// [APIServerDeferred]: The [APIServerDeferred] object associated with the resource ID.
function resource(id: String): APIServerDeferred =
        if (!resources.isEmpty) if (resources.containsKey(id)) resources[id] else new APIServerDeferred {} else new APIServerDeferred {}

@go.Package { name = "github.com/kdeps/schema/gen/workflow" }

module org.kdeps.pkl.Workflow

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"

import "Project.pkl"
import "Parameters.pkl"

hidden nameStringRegex = Regex(#"(^\w+$)"#)
hidden actionStringRegex = Regex(#"^(\w+|@\w+(/[\w-]+)(:[\w.]+)?)$"#)
hidden workflowStringRegex = Regex(#"^@[\w-]+(/[\w-]+)?(:[\w.]+)?$"#)
hidden versionStringRegex = Regex(#"^(\d+\.)?(\d+\.)?(\*|\d+)$"#)

hidden isValidName = (str) ->
if (str.matches(nameStringRegex))
  true
else
  throw("Error: Invalid name: The name contains invalid characters. Please ensure it only includes alphanumeric characters (letters and numbers) and is not empty.")

hidden isValidWorkflow = (str) ->
if (str.matches(workflowStringRegex))
  true
else
  throw("External workflows must start with `@`, followed by a package name, with an optional `/action` path segment and an optional `:version` (e.g., `@example`, `@example/action`, or `@example/action:1.0.0`). Ensure your input matches this format.")

hidden isValidAction = (str) ->
if (str.matches(actionStringRegex))
  true
else
  throw("Default action must be either a simple alphanumeric string or start with `@`, followed by `/action` and an optional `:version` (e.g., `@agent/action:1.0.0`).")

hidden isValidVersion = (str) ->
if (str.matches(versionStringRegex))
  true
else
  throw("Error: Invalid version format. Expected format: major.minor.patch or major.minor.")

name: String(isValidName)?
description: String?
authors: Listing<String>?
website: Uri?
documentation: Uri?
repository: Uri?

version: String(isValidVersion)? = "1.0.0"
action: String(isValidAction)?

workflows: Listing<String(isValidWorkflow)>?

settings: Project.Settings?
args: Listing<Parameters.Args>?

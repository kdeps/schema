/// Skip condition functions used across all resources.
///
/// Tools for creating skip logic validations
@ModuleInfo { minPklVersion = "0.26.1" }

@go.Package { name = "github.com/kdeps/schema/gen/skip" }

open module org.kdeps.pkl.Skip

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"
import "APIServerRequest.pkl" as request

/// Checks if a file exists.
///
/// [it]: The path of the file to check.
/// [bool]: Returns true if the file exists; false otherwise.
function ifFileExists(it: String) = read?(it) != null

/// Checks if a folder exists.
///
/// [it]: The path of the folder to check.
/// [bool]: Returns true if the folder exists and contains at least one key; false otherwise.
function ifFolderExists(it: String) = read*(it).keys.length > 0

/// Checks if a file is empty.
///
/// [it]: The path of the file to check.
/// [bool]: Returns true if the file exists and is empty; false otherwise.
function ifFileIsEmpty(it: String) = ifFileExists(it) && read?(it).base64Decoded.isEmpty

/// Checks if the HTTP request method matches a given method.
///
/// [it]: The HTTP method to compare (e.g., "GET", "POST").
/// [bool]: Returns true if the current request method matches the provided method; false otherwise.
function ifRequestMethodIs(it: String) = request.method() == it

/// Checks if the HTTP request path matches a given path.
///
/// [it]: The HTTP path to compare (e.g., "/api/resource").
/// [bool]: Returns true if the current request path matches the provided path; false otherwise.
function ifRequestPathIs(it: String) = request.path() == it

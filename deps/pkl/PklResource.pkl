/// Generic key-value store abstractions for PKL
/// No schema restrictions - can store anything from shallow to deep nested data
@ModuleInfo { minPklVersion = "0.28.2" }

@go.Package { name = "github.com/kdeps/schema/gen/pkl_resource" }

open module org.kdeps.pkl.PklResource

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.10.0#/go.pkl"
import "package://pkg.pkl-lang.org/pkl-pantry/pkl.experimental.uri@1.0.3#/URI.pkl"
import "pkl:json"
import "Core.pkl" as core

/// Gets a value from the generic key-value store
/// Collection keys are always actionIDs, scope is graphID
/// Returns the value as a string, or empty string if not found
function get(collectionKey: String?, key: String?): String = core.get(collectionKey, key)

/// Sets a value in the generic key-value store
/// Collection keys are always actionIDs, scope is graphID
/// Returns the set value as confirmation, or empty string if failed
function set(collectionKey: String?, key: String?, value: String?): String = core.set(collectionKey, key, value)

/// Lists all keys in a collection
/// Collection keys are always actionIDs, scope is graphID
/// Returns a listing of keys, or empty listing if not found
function list(collectionKey: String?): Listing<String> = core.list(collectionKey)


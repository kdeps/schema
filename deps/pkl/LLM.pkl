/// Abstractions for Kdeps LLM Resource
///
/// This module provides an abstraction layer for managing resources related to
/// large language model (LLM) interactions within the Kdeps system.
///
/// It defines the [ResourceChat] class, which encapsulates the metadata and responses
/// related to LLM model interactions. The class allows for managing prompts, responses,
/// file generations, image generation flags, and the handling of JSON responses.
///
/// Key functionalities include:
/// - Managing a collection of resources that represent LLM interactions through a mapping of unique
/// resource IDs to [ResourceChat] objects.
/// - Providing methods to retrieve various pieces of information related to the LLM interaction,
/// such as the prompt text, response text, file paths, JSON keys, and whether image generation was
/// involved.
@ModuleInfo { minPklVersion = "0.26.1" }

@go.Package { name = "github.com/kdeps/schema/gen/llm" }

open module org.kdeps.pkl.LLM

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"

/// A mapping of resource IDs to their associated [ResourceChat] objects.
resources: Mapping<String, ResourceChat>?

/// Class representing the details of a chat interaction with an LLM model, including prompts, responses,
/// file generation, and additional metadata.
class ResourceChat {
    /// The name of the LLM model used for the chat.
    model: String = "llama3.2"
    /// The prompt text sent to the LLM model.
    prompt: String
    /// A listing of file paths or identifiers associated with the chat.
    files: Listing<String>?
    /// Whether the chat involves image generation. Defaults to `false`.
    imageGeneration: Boolean? = false
    /// The file path of a generated file from the LLM interaction.
    generatedFile: String?
    /// Whether the LLM's response is in JSON format. Defaults to `false`.
    jsonResponse: Boolean? = false
    /// A listing of keys expected in the JSON response from the LLM model.
    jsonResponseKeys: Listing<String>?
    /// The actual response returned from the LLM model.
    response: String?
    /// A timestamp of when the response was generated, represented as an unsigned 32-bit integer.
    timestamp: UInt32?
    /// The timeout duration (in seconds) for the LLM interaction. Defaults to 60 seconds.
    timeoutSeconds: Int? = 60
}

/// Retrieves the [ResourceChat] associated with the given [id].
///
/// If the resource is not found, returns a new [ResourceChat] with default values.
///
/// [id]: The ID of the resource to retrieve.
/// [ResourceChat]: The [ResourceChat] object associated with the resource ID.
function resource(id: String): ResourceChat =
        if (resources.getOrNull(id) != null) resources[id] else new ResourceChat {
                prompt = ""
                response = ""
                jsonResponse = false
                jsonResponseKeys {}
        }

/// Retrieves the response text associated with the resource [id].
///
/// [id]: The ID of the resource to retrieve the response for.
/// [str]: The response text returned by the LLM model.
function response(id: String): String = resource(id).response

/// Retrieves the prompt text associated with the resource [id].
///
/// [id]: The ID of the resource to retrieve the prompt for.
/// [str]: The prompt text sent to the LLM model.
function prompt(id: String): String = resource(id).prompt

/// Retrieves whether the LLM's response for the resource [id] is in JSON format.
///
/// [id]: The ID of the resource to check for JSON response.
/// [bool]: True if the response is in JSON format, otherwise False.
function jsonResponse(id: String): Boolean = resource(id).jsonResponse

/// Retrieves the JSON response keys for the resource [id].
///
/// [id]: The ID of the resource to retrieve the JSON response keys for.
/// [Listing<String>]: A listing of expected JSON keys in the response.
function jsonResponseKeys(id: String): Listing<String> = resource(id).jsonResponseKeys

/// Retrieves whether the resource [id] involves image generation.
///
/// [id]: The ID of the resource to check for image generation.
/// [bool]: True if the chat involves image generation, otherwise False.
function imageGeneration(id: String): Boolean = resource(id).imageGeneration

/// Retrieves the file path of a generated file for the resource [id].
///
/// [id]: The ID of the resource to retrieve the generated file path for.
/// [str]: The file path of the generated file.
function generatedFile(id: String): String = resource(id).generatedFile

@go.Package { name = "github.com/kdeps/schema/gen/http" }

open module org.kdeps.pkl.Http

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl"

resources: Mapping<String, ResourceHTTPClient>?

class ResourceHTTPClient {
        hidden apiMethodRegex = Regex(#"^(?i:(GET|POST|PUT|PATCH|DELETE|HEAD))"#)

        hidden isValidHTTPMethod = (str) ->
        if (str.matches(apiMethodRegex))
          true
        else
          throw("Error: Invalid HTTP method. The provided HTTP method is not supported. Please use one of the following methods: GET, POST, PUT, PATCH, DELETE, or HEAD.")

        method: String(isValidHTTPMethod)
        url: Uri
        data: Listing<String>?
        headers: Mapping<String, String>?
        response: ResponseBlock?
        timestamp: UInt32?
        timeoutSeconds: Int? = 60
}

class ResponseBlock {
        body: String?
        headers: Mapping<String, String>?
}

function resource(id: String): ResourceHTTPClient =
        if (resources.getOrNull(id) != null)
                resources[id]
        else
                new ResourceHTTPClient {
                        method = "GET"
                        url = ""
                        data {}
                        headers {}
                        response {}
                }

function responseBody(id: String): String = resource(id).response.body

function responseHeader(id: String, headerId: String): String =
        if (!resource(id).response.headers.isEmpty)
                if (resource(id).response.headers.containsKey(headerId))resource(id).response.headers[headerId] else ""
        else
                ""

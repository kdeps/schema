/// Abstractions for Kdeps API Server Configuration
///
/// This module defines the settings and routes for configuring the Kdeps API Server. It includes
/// server settings such as host IP and port number, as well as route definitions. The API server
/// is designed to handle incoming requests and route them to the appropriate handlers, ensuring
/// proper management of HTTP methods and deferred processing.
@ModuleInfo { minPklVersion = "0.28.1" }

@go.Package { name = "github.com/kdeps/schema/gen/api_server" }

open module org.kdeps.pkl.APIServer

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.9.0#/go.pkl"
import "APIServerResponse.pkl"
import "APIServerRequest.pkl"

/// Class representing the configuration settings for the API server.
class APIServerSettings {
        /// The IP address the API server will bind to. Defaults to "127.0.0.1".
        hostIP: String = "127.0.0.1"

        /// The port number the API server will listen on. Defaults to 3000.
        portNum: UInt16 = 3000

        /// A list of trusted proxies (IPv4, IPv6, or CIDR ranges).
        /// If set, only requests passing through these proxies will have their `X-Forwarded-For`
        /// header trusted.
        /// If unset, all proxies—including potentially malicious ones—are considered trusted,
        /// which may expose the server to IP spoofing and other attacks.
        trustedProxies: Listing<String>?

        /// A listing of routes configured for the API server.
        ///
        /// Each route defines a path and the allowed HTTP methods for that path.
        routes: Listing<APIServerRoutes>
}

/// Class representing a route in the API server configuration.
class APIServerRoutes {
        /// Regex pattern for validating supported HTTP methods.
        hidden APIServerMethodRegex = Regex(#"^(?i:(GET|POST|PUT|PATCH|OPTIONS|DELETE|HEAD))"#)

        /// Validates the HTTP method used in the route.
        ///
        /// Throws an error if the provided method is not supported.
        hidden isValidHTTPMethod = (str) -> if (str.matches(APIServerMethodRegex)) true else throw("Error: Unsupported HTTP method. The provided HTTP method is not supported. Please use one of the following methods: GET, POST, PUT, PATCH, DELETE, OPTIONS, or HEAD.")

        /// The path for the route in the API server.
        path: String

        /// A listing of allowed HTTP methods for this route, validated by the HTTP method regex.
        methods: Listing<String(isValidHTTPMethod)>
}

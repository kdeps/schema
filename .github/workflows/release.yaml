'on':
  push:
    branches:
      - '**'  # All branches
    tags:
      - '*'
  pull_request:
    branches:
      - main
      - master

jobs:
  test-and-build:
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags/') && !contains(github.ref, 'refs/heads/main') && !contains(github.ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '21'
        cache: gradle
    - uses: gradle/actions/setup-gradle@v4
    - name: run tests
      run: |
        echo "Running tests on branch push..."
        cd assets && go test -v ./...
    - name: build
      env:
        VERSION: "0.0.0-$(git rev-parse --short HEAD)"
      run: |
        echo "Building with version: $VERSION"
        VERSION="$VERSION" ./gradlew makePackages
        
  build:
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '21'
        cache: gradle
    - uses: gradle/actions/setup-gradle@v4
    - name: build
      env:
        VERSION: "0.0.0-$(git rev-parse --short HEAD)"
      run: |
        echo "Building on main/master merge..."
        VERSION="$VERSION" ./gradlew makePackages
        
  upload:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '21'
        cache: gradle
    - uses: gradle/actions/setup-gradle@v4
    - name: build
      env:
        VERSION: ${{ github.ref_name }}
      run: ./gradlew makePackages
    - name: release
      uses: softprops/action-gh-release@v1
      with:
        files: build/generated/pkl/packages/*
    - name: create docs
      env:
        VERSION_NUM: ${{ github.ref_name }}
      run: |
        # Retry mechanism
        set +e
        # Extract version number without the leading 'v'
        export VERSION=$(echo "${VERSION_NUM}" | sed -E 's/^v(.*)$/\1/')
        ./gradlew pkldoc
        EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ]; then
          echo "First attempt failed, retrying..."
          sleep 30s
          ./gradlew pkldoc
        fi
        set -e
    - name: setup pages
      uses: actions/configure-pages@v4
    - name: upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/pkldoc/pkldoc
    permissions:
      contents: write
  deploy-pages:
    runs-on: ubuntu-latest
    steps:
    - id: deployment
      name: deploy pages
      uses: actions/deploy-pages@v4
    needs: upload
    permissions:
      pages: write
      id-token: write
    environment:
      name: pkl-docs
      url: ${{ steps.deployment.outputs.page_url }}
